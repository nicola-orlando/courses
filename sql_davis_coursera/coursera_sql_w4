Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review = 10000
vi. Checkin = 493
vii. Photo = 10000
viii. Tip = 537
ix. User = 10000
x. Friend = 11
xi. Elite_years = 2780 

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer:
	No 
	
	SQL code used to arrive at answer:

Select *  
From 
User
Where( id is null or name is null or review_count is null or yelping_since is null or  
useful is null or funny is null or cool is null or fans is null or average_stars is null or 
compliment_hot is null or compliment_more is null or compliment_profile is null  or 
compliment_cute is null or compliment_list is null or compliment_note is null or 
compliment_plain is null or compliment_cool is null or compliment_funny is null or 
compliment_writer is null or compliment_photos is null )
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:1		max:5		avg:3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:1		max:5		avg:3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:0		max:2		avg:0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:0		max:2		avg:0.0144
		
	
	v. Table: User, Column: Review_count
	
		min:0		max:2000	avg:24.2995
		

5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:

Select City, Sum(review_count)
From 
Business
Group by City
Order by Sum(review_count) desc
	
	Copy and Paste the Result Below:

+-----------------+-------------+-------------------+
| city            | count(City) | Sum(review_count) |
+-----------------+-------------+-------------------+
| Las Vegas       |        1561 |             82854 |
| Phoenix         |        1001 |             34503 |
| Toronto         |         985 |             24113 |
| Scottsdale      |         497 |             20614 |
| Charlotte       |         468 |             12523 |
| Henderson       |         274 |             10871 |
| Tempe           |         261 |             10504 |
| Pittsburgh      |         353 |              9798 |
| Montréal        |         337 |              9448 |
| Chandler        |         232 |              8112 |
| Mesa            |         304 |              6875 |
| Gilbert         |         188 |              6380 |
| Cleveland       |         189 |              5593 |
| Madison         |         176 |              5265 |
| Glendale        |         188 |              4406 |
| Mississauga     |         150 |              3814 |
| Edinburgh       |         239 |              2792 |
| Peoria          |         105 |              2624 |
| North Las Vegas |          70 |              2438 |
| Markham         |          80 |              2352 |
| Champaign       |          71 |              2029 |
| Stuttgart       |         141 |              1849 |
| Surprise        |          60 |              1520 |
| Lakewood        |          32 |              1465 |
| Goodyear        |          41 |              1155 |
+-----------------+-------------+-------------------+
(Output limit exceeded, 25 of 362 total rows shown)

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

Select stars, count(stars)  
From 
Business
Where City = 'Avon' 
Group by stars

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

+-------+--------------+
| stars | count(stars) |
+-------+--------------+
|   1.5 |            1 |
|   2.5 |            2 |
|   3.5 |            3 |
|   4.0 |            2 |
|   4.5 |            1 |
|   5.0 |            1 |
+-------+--------------+

ii. Beachwood


SQL code used to arrive at answer:

Select stars, count(stars)  
From 
Business
Where City = 'Beachwood' 
Group by stars 

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
		
+-------+--------------+
| stars | count(stars) |
+-------+--------------+
|   2.0 |            1 |
|   2.5 |            1 |
|   3.0 |            2 |
|   3.5 |            2 |
|   4.0 |            1 |
|   4.5 |            2 |
|   5.0 |            5 |
+-------+--------------+

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:

Select id, name, sum(review_count)  
From 
User
Group by id 
Order by sum(review_count) desc
Limit 3

	Copy and Paste the Result Below:
		
+------------------------+--------+-------------------+
| id                     | name   | sum(review_count) |
+------------------------+--------+-------------------+
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald |              2000 |
| -3s52C4zL_DHRK0ULG6qtg | Sara   |              1629 |
| -8lbUNlXVSoXqaRRiHiSNg | Yuri   |              1339 |
+------------------------+--------+-------------------+

8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	
	There seem to be a mild correlation. The set containing the top 10 users with most reviews is strongly overlapping with that formed with top 10 users with most fans. 
	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:
	They the same counts. Hate = Love = 54 
	
	SQL code used to arrive at answer:

Select count(a.text) as hate_counts, count(b.text) as love_counts 
From 
Review as a
-- Where a.text like '%hate%'
inner join 
Review as b
on a.id = b.id 
Where b.text like '%love%' and a.text like '%hate%'
	
		
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
Select name, fans
From 
User
Order by fans desc
Limit 10

	Copy and Paste the Result Below:

+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+
	

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?

Select Business.name, Hours.hours, Business.stars, Category.category
From 
Business 
Inner join 
Hours
On Business.id = Hours.business_id 
Left join Category 
on Business.id = Category.business_id
Where Business.city = 'Toronto' and 
(Business.stars = 2 or Business.stars = 3) and
Category.category = 'Restaurants'  
Order by Business.stars desc, Business.name, Hours.hours

once can see that 2/3 stars restaurants are open every day. While the only 4 star restaurant is open for 3 days and half a day on Sunday.  

ii. Do the two groups you chose to analyze have a different number of reviews?

Yes the 4/5 star group (which has a single restaurant), has 89 reviews, while the 3 restaurants in the 2/3 stars group reach 86 reviews. So restaurants with higher stars have higher reviews. 
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

The places with most reviews are located in touristic areas. For example the 4 star restaurant is located in Niagara. The other restaurants with 2/3 stars are located downtown or closeby, so they are probably getting also lots of locals as customers. 

SQL code used for analysis:

Select distinct Business.name, Business.stars, Business.review_count, 
Business.neighborhood
From 
Business 
Inner join 
Hours
On Business.id = Hours.business_id 
Where Business.city = 'Toronto' and 
(Business.stars = 4 or Business.stars = 5) 
Order by Business.stars desc, Business.name, Hours.hours 	
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:

One difference is related to the average number of reviews. Restaurants that are closed have significantly lower number of reviews.


ii. Difference 2:
         
There is a large fraction of places that closed (5%) in the Entertainment District, twice as much as those that stayed open (2.5%).           
Places in residential areas (Scarborough,Etobicoke,Yorkville) seem to close less frequently. 

SQL code used for analysis:

Select avg(a.review_count) as reviews_closed, 
avg(b.review_count) as revews_open, 
avg(a.stars) as stars_closed,
avg(b.stars) as stars_open 
From 
Business a, Business b
Where a.is_open = 0 and a.city = 'Toronto' and b.is_open = 1 and b.city = 'Toronto'
	
+----------------+---------------+---------------+---------------+
| reviews_closed |   revews_open |  stars_closed |    stars_open |
+----------------+---------------+---------------+---------------+
|  20.4822335025 | 25.4796954315 | 3.41370558376 | 3.57868020305 |
+----------------+---------------+---------------+---------------+

Also this sort of fragment

Select distinct neighborhood, count(neighborhood)
From Business  
Where city = 'Toronto' and is_open = 1 
Group by neighborhood
Order by count(neighborhood) desc

3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:

For this taks I would like to check empirically (no direct calculation) the correlation between business' geographical location and a number of aspects of how businesses are received by
their reviewers. Here some findings: 
1. There seem to be geographical correlation between the how much apprecciated food business are versus their geographical location.
Cities located in warmer climates tend to have higher average stars. The only exception here seems to be Edinburgh and Stuttgart where there are good restaurants (average stars of 3.8).
Gilbert highlights well this point, it's the only city with at least 50 5-star businesses and it's located towards south US.
2. Surprise is a city with the largest absolute amount of closed 4-stars or 5-stars restaurants, indicating that this area of US might have faced some econimical crisis. The closed restaurants also show a pretty low number of reviews (about 20 per restaurant)
3. In contrast Las Vegas can count the largest amounth of 4-stars and above open restaurants, 1482 overall counting 82854 reviews.   
4. There are many more reviews of restaurants below NY latitude, most of them in southern US, here a selection for those with latitude < 40  

+------------+---------------+---------------+---------------+
| review_sum | average_stars | n_of_business |      latitude |
+------------+---------------+---------------+---------------+
|     214965 | 3.70235602094 |          5094 | 34.5705956719 |
+------------+---------------+---------------+---------------+

and above 40

+------------+---------------+---------------+---------------+
| review_sum | average_stars | n_of_business |      latitude |
+------------+---------------+---------------+---------------+
|      89596 | 3.59121779859 |          3951 | 44.0025768852 |
+------------+---------------+---------------+---------------+


ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

I will just use data from the Business table with suitable aggregation functions. I filtered our all cities with fewer than 50 businesses.  
                  
iii. Output of your finished dataset:

(see also above)

+------------+------------+---------------+---------------+---------------+
| city       | review_sum | average_stars | n_of_business |      latitude |
+------------+------------+---------------+---------------+---------------+
| Scottsdale |      20614 | 3.95674044266 |           493 | 33.5696531187 |
| Gilbert    |       6380 | 3.86170212766 |           184 | 33.3341042553 |
| Stuttgart  |       1849 | 3.81205673759 |           139 | 48.7790170213 |
| Pittsburgh |       9798 | 3.80311614731 |           344 |  40.449968272 |
| Edinburgh  |       2792 | 3.79916317992 |           237 | 56.0920476987 |
| Peoria     |       2624 | 3.78571428571 |           105 | 33.6253047619 |
| Las Vegas  |      82854 | 3.74311338885 |          1482 | 36.1294602819 |
| Henderson  |      10871 | 3.73357664234 |           271 | 36.0331992701 |
| Tempe      |      10504 | 3.72413793103 |           258 | 33.3962980843 |
| Madison    |       5265 | 3.68465909091 |           175 | 43.0741142045 |
+------------+------------+---------------+---------------+---------------+
         
iv. Provide the SQL code you used to create your final dataset:

Three separate queries to extract data used for the points illustrated above. 

Select Business.city, 
sum(Business.review_count) as review_sum, 
avg(Business.stars) as average_stars, 
count(distinct name) as n_of_business, 
avg(latitude) as latitude 
From Business
Group by Business.city 
Having n_of_business > 50
Order by average_stars desc, review_sum desc 
Limit 10

Select Business.city, 
sum(Business.review_count) as review_sum, 
avg(Business.stars) as average_stars, 
count(distinct name) as n_of_business, 
avg(latitude) as latitude 
From Business
Group by Business.city 
Having n_of_business > 30 and Business.stars >= 4 and Business.is_open = 0 
Order by average_stars desc, review_sum desc 

Select  
sum(Business.review_count) as review_sum, 
avg(Business.stars) as average_stars, 
count(distinct name) as n_of_business, 
avg(latitude) as latitude 
From Business
Where latitude > 40 





